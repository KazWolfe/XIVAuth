# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main", "ci-testing" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install JS dependencies & build frontend
        env:
          RAILS_ENV: test
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn install --frozen-lockfile

      - name: Cache node modules (yarn)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/yarn
            ~/.config/yarn
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Precompile assets
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bin/rails css:build || true
          bin/rails js:build || true
          bundle exec rails assets:precompile

      - name: Set up database schema
        run: bin/rails db:schema:load

      - name: Run tests
        run: bundle exec rspec --color --format documentation

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tmp/testresults/rspec.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tmp/testresults/coverage/coverage.xml

  lint:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Generate binstubs
        run: bundle binstubs rubocop
      - name: Lint Ruby files
        run: bin/rubocop --parallel
